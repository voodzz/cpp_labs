#include <iostream>
#include <vector>
#include <fstream>
#include "sorting_algorithms.h"
#include "data_generation.h"

int main() {
    std::vector<int> list = generateAndWriteDataAscending(10);
    std::vector<int> unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataAscending(100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataAscending(1000);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataAscending(10000);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataDescending(10);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataDescending(100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataDescending(1000);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataDescending(10000);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(100, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(1000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(100, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(1000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(100, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(1000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();

    list = generateAndWriteDataRandom(10000, 100);
    unsorted = list;
    bubbleSort<int>(list);
    list = unsorted;
    selectionSort<int>(list);
    list = unsorted;
    insertionSort<int>(list);
    list = unsorted;
    shellSort<int>(list);
    list = unsorted;
    cocktailSort<int>(list);
    list = unsorted;
    combSort<int>(list);
    list = unsorted;
    doubleSelectionSort<int>(list);
    list = unsorted;
    calculateDurationOfMergeSort<int>(list);
    list = unsorted;
    calculateDurationOfQuickSort<int>(list);
    printAmountOfSwapsAndCompares();
}